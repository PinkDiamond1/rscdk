name: PR
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  pr:
    strategy:
      matrix:
        python-version: [3.9]
        step: ['test']
        # step: ['lint', 'test:chain']
    name: ${{ matrix.step }}
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy, rust-src
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python3 -m pip install -U pip setuptools
          python3 -m pip install wheel
          python3 -m pip install pytest
          python3 -m pip install pytest-xdist
          python3 -m pip install ipyeos
          python3 -m pip install rust-contracts-builder
      - name: Install binaryen
        run: |
          set -e
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_109/binaryen-version_109-x86_64-linux.tar.gz | tar xzf -
          echo "`pwd`/binaryen-version_109/bin" > $GITHUB_PATH
      - name: test code generator
        working-directory: crates/codegen
        run: |
          cargo test contract_tests::tests::
      - name: Cache tests target
        uses: actions/cache@v2
        id: cache-tests-target
        with:
          path: tests/target
          key: ${{ runner.os }}-tests-target-1
      - name: run unit tests
        working-directory: tests
        run: |
          PYTHON_SHARED_LIB_PATH=${{ env.pythonLocation }}/lib/libpython3.9.so make
      - name: run tests in examples
        working-directory: examples
        run: |
          PYTHON_SHARED_LIB_PATH=${{ env.pythonLocation }}/lib/libpython3.9.so make -j3
